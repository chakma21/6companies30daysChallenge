class Solution {
    public int longestMountain(int[] arr) {
        if (arr.length<3) return 0;
        int n=arr.length;
        int c=0;
        for (int i = 1; i < n - 1; i++) {
            // Check if the current element is a peak
            if (arr[i] > arr[i - 1] && arr[i] > arr[i + 1]) {
                // Expand left and right to find the boundaries of the mountain
                int left = i - 1;
                while (left > 0 && arr[left] > arr[left - 1]) {
                    left--;
                }

                int right = i + 1;
                while (right < n - 1 && arr[right] > arr[right + 1]) {
                    right++;
                }

                c=Math.max(right-left+1,c);
                i=right;
            }
        }
        return c;
    }
}
